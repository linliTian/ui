(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{FRyd:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return y})),t.d(n,"default",(function(){return O}));var o=t("Fcif"),c=t("+I+c"),a=t("mXGw"),i=t("/FXl"),d=t("TjRS"),l=t("ZFoC"),r=t("06FW"),m=t("odlw"),s=t("DjeI"),p=t("5AQZ"),b=t("yj+E"),y=(t("aD51"),{});void 0!==y&&y&&y===Object(y)&&Object.isExtensible(y)&&!y.hasOwnProperty("__filemeta")&&Object.defineProperty(y,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/accordion/docz/Accordion.mdx"}});var C={_frontmatter:y},u=d.a;function O(e){var n,t,O,j=e.components,A=Object(c.a)(e,["components"]);return Object(i.b)(u,Object(o.a)({},C,A,{components:j,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"accordion"},"Accordion"),Object(i.b)("h3",{id:"accordions-allow-users-to-display-content-in-an-organized-space-efficient-way"},"Accordions allow users to display content in an organized, space efficient way."),Object(i.b)("h2",{id:"standard"},"Standard"),Object(i.b)("p",null,"The standard accordion will allow users to expand multiple sections. Set the ",Object(i.b)("inlineCode",{parentName:"p"},"classic")," prop to ",Object(i.b)("inlineCode",{parentName:"p"},"false")," to achieve this behaviour."),Object(i.b)(l.c,{__position:0,__code:"<ThemeContainer>\n  <AccordionContainer>\n    <Accordion classic={false} defaultExpandedItems={['1', '3']} itemGap={20}>\n      <AccordionItem itemKey=\"1\" footer={<Button>Submit</Button>}>\n        <CollapseContent>\n          <Input label={'First Name'} />\n          <Input label={'Last Name'} />\n          <Input label={'Email'} />\n          <Input label={'Phone Number'} />\n        </CollapseContent>\n      </AccordionItem>\n      <AccordionItem itemKey=\"2\">\n        <CollapseContent />\n      </AccordionItem>\n      <AccordionItem itemKey=\"3\">\n        <CollapseContent />\n      </AccordionItem>\n    </Accordion>\n  </AccordionContainer>\n</ThemeContainer>",__scope:(n={props:A,DefaultLayout:d.a,Playground:l.c,Props:l.d,Input:r.a,Button:m.a,Accordion:s.a,AccordionItem:p.a,StyledCollapseContent:b.e,CollapseContent:b.b,AccordionContainer:b.a,ThemeContainer:b.f},n.DefaultLayout=d.a,n._frontmatter=y,n),mdxType:"Playground"},Object(i.b)(b.f,{mdxType:"ThemeContainer"},Object(i.b)(b.a,{mdxType:"AccordionContainer"},Object(i.b)(s.a,{classic:!1,defaultExpandedItems:["1","3"],itemGap:20,mdxType:"Accordion"},Object(i.b)(p.a,{itemKey:"1",footer:Object(i.b)(m.a,{mdxType:"Button"},"Submit"),mdxType:"AccordionItem"},Object(i.b)(b.b,{mdxType:"CollapseContent"},Object(i.b)(r.a,{label:"First Name",mdxType:"Input"}),Object(i.b)(r.a,{label:"Last Name",mdxType:"Input"}),Object(i.b)(r.a,{label:"Email",mdxType:"Input"}),Object(i.b)(r.a,{label:"Phone Number",mdxType:"Input"}))),Object(i.b)(p.a,{itemKey:"2",mdxType:"AccordionItem"},Object(i.b)(b.b,{mdxType:"CollapseContent"})),Object(i.b)(p.a,{itemKey:"3",mdxType:"AccordionItem"},Object(i.b)(b.b,{mdxType:"CollapseContent"})))))),Object(i.b)("h2",{id:"classic"},"Classic"),Object(i.b)("p",null,"The standard accordion will allow users to expand a single section at a time. Set the ",Object(i.b)("inlineCode",{parentName:"p"},"classic")," prop to ",Object(i.b)("inlineCode",{parentName:"p"},"true")," to achieve this behaviour."),Object(i.b)(l.c,{__position:1,__code:'<ThemeContainer>\n  <AccordionContainer>\n    <Accordion itemGap={20} classic>\n      <AccordionItem itemKey="1">\n        <CollapseContent />\n      </AccordionItem>\n      <AccordionItem itemKey="2">\n        <CollapseContent />\n      </AccordionItem>\n      <AccordionItem itemKey="3">\n        <CollapseContent />\n      </AccordionItem>\n    </Accordion>\n  </AccordionContainer>\n</ThemeContainer>',__scope:(t={props:A,DefaultLayout:d.a,Playground:l.c,Props:l.d,Input:r.a,Button:m.a,Accordion:s.a,AccordionItem:p.a,StyledCollapseContent:b.e,CollapseContent:b.b,AccordionContainer:b.a,ThemeContainer:b.f},t.DefaultLayout=d.a,t._frontmatter=y,t),mdxType:"Playground"},Object(i.b)(b.f,{mdxType:"ThemeContainer"},Object(i.b)(b.a,{mdxType:"AccordionContainer"},Object(i.b)(s.a,{itemGap:20,classic:!0,mdxType:"Accordion"},Object(i.b)(p.a,{itemKey:"1",mdxType:"AccordionItem"},Object(i.b)(b.b,{mdxType:"CollapseContent"})),Object(i.b)(p.a,{itemKey:"2",mdxType:"AccordionItem"},Object(i.b)(b.b,{mdxType:"CollapseContent"})),Object(i.b)(p.a,{itemKey:"3",mdxType:"AccordionItem"},Object(i.b)(b.b,{mdxType:"CollapseContent"})))))),Object(i.b)("h2",{id:"external-accordion-control"},"External Accordion Control"),Object(i.b)("p",null,"Take external control of the accordion by passing ",Object(i.b)("inlineCode",{parentName:"p"},"expandedItems")," that are managed outside of the ",Object(i.b)("inlineCode",{parentName:"p"},"Accordion"),"."),Object(i.b)(l.c,{__position:2,__code:"() => {\n  const itemKeys = ['1', '2', '3']\n  const [selectedItems, setSelectedItems] = React.useState([])\n  const handleOnChange = key => {\n    if (selectedItems.includes(key)) {\n      setSelectedItems(selectedItems.filter(i => i !== key))\n    } else {\n      setSelectedItems(selectedItems.concat(key))\n    }\n  }\n\n  const handleOnClick = () => {\n    if (selectedItems.length === itemKeys.length) {\n      setSelectedItems([])\n    } else {\n      setSelectedItems(itemKeys)\n    }\n  }\n  const isFullyExpanded = selectedItems.length === itemKeys.length\n  return (\n    <ThemeContainer>\n      <AccordionContainer>\n        <Button onClick={handleOnClick}>\n          {isFullyExpanded ? 'Close All' : 'Expand All'}\n        </Button>\n        <div style={{ height: '20px' }} />\n        <Accordion\n          itemGap={20}\n          expandedItems={selectedItems}\n          defaultExpandedItems={selectedItems}\n          onChange={handleOnChange}\n        >\n          <AccordionItem itemKey={itemKeys[0]} footer={<div>A footer</div>}>\n            <CollapseContent />\n          </AccordionItem>\n          <AccordionItem itemKey={itemKeys[1]} disabled>\n            <CollapseContent />\n          </AccordionItem>\n          <AccordionItem itemKey={itemKeys[2]}>\n            <CollapseContent />\n          </AccordionItem>\n        </Accordion>\n      </AccordionContainer>\n    </ThemeContainer>\n  )\n}",__scope:(O={props:A,DefaultLayout:d.a,Playground:l.c,Props:l.d,Input:r.a,Button:m.a,Accordion:s.a,AccordionItem:p.a,StyledCollapseContent:b.e,CollapseContent:b.b,AccordionContainer:b.a,ThemeContainer:b.f},O.DefaultLayout=d.a,O._frontmatter=y,O),mdxType:"Playground"},(function(){var e=["1","2","3"],n=a.useState([]),t=n[0],o=n[1],c=t.length===e.length;return Object(i.b)(b.f,{mdxType:"ThemeContainer"},Object(i.b)(b.a,{mdxType:"AccordionContainer"},Object(i.b)(m.a,{onClick:function(){t.length===e.length?o([]):o(e)},mdxType:"Button"},c?"Close All":"Expand All"),Object(i.b)("div",{style:{height:"20px"}}),Object(i.b)(s.a,{itemGap:20,expandedItems:t,defaultExpandedItems:t,onChange:function(e){t.includes(e)?o(t.filter((function(n){return n!==e}))):o(t.concat(e))},mdxType:"Accordion"},Object(i.b)(p.a,{itemKey:e[0],footer:Object(i.b)("div",null,"A footer"),mdxType:"AccordionItem"},Object(i.b)(b.b,{mdxType:"CollapseContent"})),Object(i.b)(p.a,{itemKey:e[1],disabled:!0,mdxType:"AccordionItem"},Object(i.b)(b.b,{mdxType:"CollapseContent"})),Object(i.b)(p.a,{itemKey:e[2],mdxType:"AccordionItem"},Object(i.b)(b.b,{mdxType:"CollapseContent"})))))})),Object(i.b)("h2",{id:"accordion-props"},"Accordion Props"),Object(i.b)(l.d,{table:!0,of:s.a,mdxType:"Props"}),Object(i.b)("h2",{id:"accordionitem-props"},"AccordionItem Props"),Object(i.b)(l.d,{table:!0,of:p.a,exclude:["expanded","onChange"],mdxType:"Props"}),Object(i.b)("h2",{id:"theme"},"Theme"),Object(i.b)("p",null,"To modify the accordion item theme, please see the ",Object(i.b)("inlineCode",{parentName:"p"},"Collapse")," component."))}void 0!==O&&O&&O===Object(O)&&Object.isExtensible(O)&&!O.hasOwnProperty("__filemeta")&&Object.defineProperty(O,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/accordion/docz/Accordion.mdx"}}),O.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-accordion-docz-accordion-mdx-efb85ed445de14ff2785.js.map