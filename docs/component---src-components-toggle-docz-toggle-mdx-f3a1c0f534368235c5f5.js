(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{UREf:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return g})),t.d(n,"default",(function(){return m}));var o=t("Fcif"),a=t("+I+c"),i=t("mXGw"),c=t("/FXl"),s=t("TjRS"),r=t("ZFoC"),l=t("V9Nt"),b=t("yAPq"),u=t("odlw"),d=t("yj+E"),g=(t("aD51"),{});void 0!==g&&g&&g===Object(g)&&Object.isExtensible(g)&&!g.hasOwnProperty("__filemeta")&&Object.defineProperty(g,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/toggle/docz/Toggle.mdx"}});var O={_frontmatter:g},p=s.a;function m(e){var n,t,m,f,T=e.components,C=Object(a.a)(e,["components"]);return Object(c.b)(p,Object(o.a)({},O,C,{components:T,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"toggle"},"Toggle"),Object(c.b)("h2",{id:"simple"},"Simple"),Object(c.b)(r.c,{__position:0,__code:"() => {\n  const [isOn, setIsOn] = React.useState(false)\n  const handleClick = React.useCallback(() => {\n    setIsOn(!isOn)\n  }, [setIsOn, isOn])\n  return (\n    <ThemeContainer>\n      <Toggle onClick={handleClick} isOn={isOn} />\n    </ThemeContainer>\n  )\n}",__scope:(n={props:C,DefaultLayout:s.a,Playground:r.c,Props:r.d,Toggle:l.a,Container:b.a,Spacer:b.b,Button:u.a,ThemeContainer:d.f},n.DefaultLayout=s.a,n._frontmatter=g,n),mdxType:"Playground"},(function(){var e=i.useState(!1),n=e[0],t=e[1],o=i.useCallback((function(){t(!n)}),[t,n]);return Object(c.b)(d.f,{mdxType:"ThemeContainer"},Object(c.b)(l.a,{onClick:o,isOn:n,mdxType:"Toggle"}))})),Object(c.b)("h2",{id:"isloading"},"isLoading"),Object(c.b)("p",null,"If there is an asyncronous action occuring as a result of turning on or off the toggle. Provide the user feedback by showing a loading indicator."),Object(c.b)(r.c,{__position:1,__code:"() => {\n  const [isLoading, setLoading] = React.useState(false)\n  const [isOn, setIsOn] = React.useState(false)\n  const handleClick = React.useCallback(() => {\n    setIsOn(!isOn)\n    setLoading(true)\n    setTimeout(() => {\n      setLoading(false)\n    }, 2000)\n  }, [setIsOn, isOn, setLoading])\n  return (\n    <ThemeContainer>\n      <Toggle onClick={handleClick} isLoading={isLoading} isOn={isOn} />\n    </ThemeContainer>\n  )\n}",__scope:(t={props:C,DefaultLayout:s.a,Playground:r.c,Props:r.d,Toggle:l.a,Container:b.a,Spacer:b.b,Button:u.a,ThemeContainer:d.f},t.DefaultLayout=s.a,t._frontmatter=g,t),mdxType:"Playground"},(function(){var e=i.useState(!1),n=e[0],t=e[1],o=i.useState(!1),a=o[0],s=o[1],r=i.useCallback((function(){s(!a),t(!0),setTimeout((function(){t(!1)}),2e3)}),[s,a,t]);return Object(c.b)(d.f,{mdxType:"ThemeContainer"},Object(c.b)(l.a,{onClick:r,isLoading:n,isOn:a,mdxType:"Toggle"}))})),Object(c.b)("h2",{id:"ison"},"isOn"),Object(c.b)("p",null,"Control the toggle setting."),Object(c.b)(r.c,{__position:2,__code:"() => {\n  const [isOn, setIsOn] = React.useState(true)\n  const handleClickOn = React.useCallback(() => setIsOn(true), [setIsOn])\n  const handleClickOff = React.useCallback(() => setIsOn(false), [setIsOn])\n  return (\n    <ThemeContainer>\n      <React.Fragment>\n        <Container>\n          <Button onClick={handleClickOff}>Toggle Off</Button>\n          <Spacer />\n          <Button onClick={handleClickOn}>Toggle On</Button>\n        </Container>\n        <Container>\n          <Toggle isOn={isOn} />\n        </Container>\n      </React.Fragment>\n    </ThemeContainer>\n  )\n}",__scope:(m={props:C,DefaultLayout:s.a,Playground:r.c,Props:r.d,Toggle:l.a,Container:b.a,Spacer:b.b,Button:u.a,ThemeContainer:d.f},m.DefaultLayout=s.a,m._frontmatter=g,m),mdxType:"Playground"},(function(){var e=i.useState(!0),n=e[0],t=e[1],o=i.useCallback((function(){return t(!0)}),[t]),a=i.useCallback((function(){return t(!1)}),[t]);return Object(c.b)(d.f,{mdxType:"ThemeContainer"},Object(c.b)(i.Fragment,null,Object(c.b)(b.a,{mdxType:"Container"},Object(c.b)(u.a,{onClick:a,mdxType:"Button"},"Toggle Off"),Object(c.b)(b.b,{mdxType:"Spacer"}),Object(c.b)(u.a,{onClick:o,mdxType:"Button"},"Toggle On")),Object(c.b)(b.a,{mdxType:"Container"},Object(c.b)(l.a,{isOn:n,mdxType:"Toggle"}))))})),Object(c.b)("h2",{id:"disabled"},"Disabled"),Object(c.b)("p",null,"Disable a users ability to interact with the toggle by setting the ",Object(c.b)("inlineCode",{parentName:"p"},"disabled")," prop to ",Object(c.b)("inlineCode",{parentName:"p"},"true"),"."),Object(c.b)(r.c,{__position:3,__code:"<ThemeContainer>\n  <Toggle disabled />\n</ThemeContainer>",__scope:(f={props:C,DefaultLayout:s.a,Playground:r.c,Props:r.d,Toggle:l.a,Container:b.a,Spacer:b.b,Button:u.a,ThemeContainer:d.f},f.DefaultLayout=s.a,f._frontmatter=g,f),mdxType:"Playground"},Object(c.b)(d.f,{mdxType:"ThemeContainer"},Object(c.b)(l.a,{disabled:!0,mdxType:"Toggle"}))),Object(c.b)("h2",{id:"toggle-props"},"Toggle Props"),Object(c.b)(r.d,{of:l.a,mdxType:"Props"}))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/toggle/docz/Toggle.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-toggle-docz-toggle-mdx-f3a1c0f534368235c5f5.js.map