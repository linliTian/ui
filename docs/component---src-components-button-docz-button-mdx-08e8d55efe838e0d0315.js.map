{"version":3,"sources":["webpack:///../src/components/button/docz/Button.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Button","Spacer","Container","ThemeContainer","type","ghost","disabled","React","loading","toggleLoading","handleToggle","style","marginBottom","onClick","shape","size","setSize","of","isMDXComponent"],"mappings":"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","file":"component---src-components-button-docz-button-mdx-08e8d55efe838e0d0315.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/linli.tian/awn/ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Button } from '../Button';\nimport { Spacer, Container, ThemeContainer } from '../../../../docz/components';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h1>\n    <p>{`Buttons allow users to take actions, and make choices, with a single tap or click.`}</p>\n    <h2 {...{\n      \"id\": \"types\"\n    }}>{`Types`}</h2>\n    <p>{`You can modify the `}<inlineCode parentName=\"p\">{`type`}</inlineCode>{` to change the style of the button depending on the use case.`}</p>\n    <Playground __position={0} __code={'<ThemeContainer>\\n  <Container>\\n    <Button type=\\\"primary\\\">Primary</Button>\\n    <Spacer />\\n    <Button type=\\\"secondary\\\">Secondary</Button>\\n    <Spacer />\\n    <Button type=\\\"tertiary\\\">Tertiary</Button>\\n    <Spacer />\\n    <Button type=\\\"danger\\\">Danger</Button>\\n    <Spacer />\\n    <Button type=\\\"link\\\">Link</Button>\\n  </Container>\\n</ThemeContainer>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Spacer,\n      Container,\n      ThemeContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <ThemeContainer mdxType=\"ThemeContainer\">\n    <Container mdxType=\"Container\">\n      <Button type=\"primary\" mdxType=\"Button\">Primary</Button>\n      <Spacer mdxType=\"Spacer\" />\n      <Button type=\"secondary\" mdxType=\"Button\">Secondary</Button>\n      <Spacer mdxType=\"Spacer\" />\n      <Button type=\"tertiary\" mdxType=\"Button\">Tertiary</Button>\n      <Spacer mdxType=\"Spacer\" />\n      <Button type=\"danger\" mdxType=\"Button\">Danger</Button>\n      <Spacer mdxType=\"Spacer\" />\n      <Button type=\"link\" mdxType=\"Button\">Link</Button>\n    </Container>\n  </ThemeContainer>\n    </Playground>\n    <h2 {...{\n      \"id\": \"ghost\"\n    }}>{`Ghost`}</h2>\n    <p>{`You can modify the background of the button to white by setting the `}<inlineCode parentName=\"p\">{`ghost`}</inlineCode>{` prop.`}</p>\n    <Playground __position={1} __code={'<ThemeContainer>\\n  <Container>\\n    <Button type=\\\"primary\\\" ghost>\\n      Primary\\n    </Button>\\n    <Spacer />\\n    <Button type=\\\"secondary\\\" ghost>\\n      Secondary\\n    </Button>\\n    <Spacer />\\n    <Button type=\\\"tertiary\\\" ghost>\\n      Tertiary\\n    </Button>\\n    <Spacer />\\n    <Button type=\\\"danger\\\" ghost>\\n      Danger\\n    </Button>\\n    <Spacer />\\n    <Button type=\\\"link\\\" ghost>\\n      Link\\n    </Button>\\n  </Container>\\n</ThemeContainer>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Spacer,\n      Container,\n      ThemeContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <ThemeContainer mdxType=\"ThemeContainer\">\n    <Container mdxType=\"Container\">\n      <Button type=\"primary\" ghost mdxType=\"Button\">\n        Primary\n      </Button>\n      <Spacer mdxType=\"Spacer\" />\n      <Button type=\"secondary\" ghost mdxType=\"Button\">\n        Secondary\n      </Button>\n      <Spacer mdxType=\"Spacer\" />\n      <Button type=\"tertiary\" ghost mdxType=\"Button\">\n        Tertiary\n      </Button>\n      <Spacer mdxType=\"Spacer\" />\n      <Button type=\"danger\" ghost mdxType=\"Button\">\n        Danger\n      </Button>\n      <Spacer mdxType=\"Spacer\" />\n      <Button type=\"link\" ghost mdxType=\"Button\">\n        Link\n      </Button>\n    </Container>\n  </ThemeContainer>\n    </Playground>\n    <h2 {...{\n      \"id\": \"disable\"\n    }}>{`Disable`}</h2>\n    <p>{`You can `}<inlineCode parentName=\"p\">{`disable`}</inlineCode>{` a button to limit a users ability to interact with it.`}</p>\n    <Playground __position={2} __code={'<ThemeContainer>\\n  <Container>\\n    <Button type=\\\"primary\\\" disabled>\\n      Primary\\n    </Button>\\n    <Spacer />\\n    <Button type=\\\"primary\\\" ghost disabled>\\n      Ghost\\n    </Button>\\n    <Spacer />\\n    <Button type=\\\"danger\\\" disabled>\\n      Danger\\n    </Button>\\n    <Spacer />\\n    <Button type=\\\"danger\\\" ghost disabled>\\n      Ghost\\n    </Button>\\n    <Spacer />\\n    <Button type=\\\"link\\\" disabled>\\n      Link\\n    </Button>\\n  </Container>\\n</ThemeContainer>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Spacer,\n      Container,\n      ThemeContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <ThemeContainer mdxType=\"ThemeContainer\">\n    <Container mdxType=\"Container\">\n      <Button type=\"primary\" disabled mdxType=\"Button\">\n        Primary\n      </Button>\n      <Spacer mdxType=\"Spacer\" />\n      <Button type=\"primary\" ghost disabled mdxType=\"Button\">\n        Ghost\n      </Button>\n      <Spacer mdxType=\"Spacer\" />\n      <Button type=\"danger\" disabled mdxType=\"Button\">\n        Danger\n      </Button>\n      <Spacer mdxType=\"Spacer\" />\n      <Button type=\"danger\" ghost disabled mdxType=\"Button\">\n        Ghost\n      </Button>\n      <Spacer mdxType=\"Spacer\" />\n      <Button type=\"link\" disabled mdxType=\"Button\">\n        Link\n      </Button>\n    </Container>\n  </ThemeContainer>\n    </Playground>\n    <h2 {...{\n      \"id\": \"loading\"\n    }}>{`Loading`}</h2>\n    <p>{`You can add a `}<inlineCode parentName=\"p\">{`loading`}</inlineCode>{` state to a button to provide the user feedback when an asynchronous action is taking place.`}</p>\n    <Playground __position={3} __code={'() => {\\n  const [loading, toggleLoading] = React.useState(false)\\n  const handleToggle = React.useCallback(() => {\\n    toggleLoading(!loading)\\n  }, [loading, toggleLoading])\\n  return (\\n    <ThemeContainer>\\n      <div style={{ marginBottom: \\'15px\\' }}>\\n        <Button onClick={handleToggle}>\\n          {loading ? \\'Cancel Loading\\' : \\'Start Loading\\'}\\n        </Button>\\n      </div>\\n      <Container>\\n        <Button type=\\\"primary\\\" onClick={handleToggle} loading={loading}>\\n          Primary\\n        </Button>\\n        <Spacer />\\n        <Button type=\\\"primary\\\" onClick={handleToggle} loading={loading} ghost>\\n          Ghost\\n        </Button>\\n        <Spacer />\\n        <Button type=\\\"danger\\\" onClick={handleToggle} loading={loading}>\\n          Danger\\n        </Button>\\n        <Spacer />\\n        <Button type=\\\"danger\\\" onClick={handleToggle} loading={loading} ghost>\\n          Danger\\n        </Button>\\n        <Spacer />\\n        <Button type=\\\"link\\\" onClick={handleToggle} loading={loading}>\\n          Link\\n        </Button>\\n      </Container>\\n    </ThemeContainer>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Spacer,\n      Container,\n      ThemeContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [loading, toggleLoading] = React.useState(false);\n        const handleToggle = React.useCallback(() => {\n          toggleLoading(!loading);\n        }, [loading, toggleLoading]);\n        return <ThemeContainer mdxType=\"ThemeContainer\">\n        <div style={{\n            marginBottom: '15px'\n          }}>\n          <Button onClick={handleToggle} mdxType=\"Button\">\n            {loading ? 'Cancel Loading' : 'Start Loading'}\n          </Button>\n        </div>\n        <Container mdxType=\"Container\">\n          <Button type=\"primary\" onClick={handleToggle} loading={loading} mdxType=\"Button\">\n            Primary\n          </Button>\n          <Spacer mdxType=\"Spacer\" />\n          <Button type=\"primary\" onClick={handleToggle} loading={loading} ghost mdxType=\"Button\">\n            Ghost\n          </Button>\n          <Spacer mdxType=\"Spacer\" />\n          <Button type=\"danger\" onClick={handleToggle} loading={loading} mdxType=\"Button\">\n            Danger\n          </Button>\n          <Spacer mdxType=\"Spacer\" />\n          <Button type=\"danger\" onClick={handleToggle} loading={loading} ghost mdxType=\"Button\">\n            Danger\n          </Button>\n          <Spacer mdxType=\"Spacer\" />\n          <Button type=\"link\" onClick={handleToggle} loading={loading} mdxType=\"Button\">\n            Link\n          </Button>\n        </Container>\n      </ThemeContainer>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"shape\"\n    }}>{`Shape`}</h2>\n    <p>{`You can modify the `}<inlineCode parentName=\"p\">{`shape`}</inlineCode>{` of the button depending on the use case.`}</p>\n    <Playground __position={4} __code={'<ThemeContainer>\\n  <Container>\\n    <Button shape=\\\"circle\\\" type=\\\"primary\\\">\\n      P\\n    </Button>\\n    <Spacer />\\n    <Button shape=\\\"circle\\\" type=\\\"danger\\\">\\n      D\\n    </Button>\\n    <Spacer />\\n    <Button shape=\\\"circle\\\" type=\\\"primary\\\" ghost>\\n      G\\n    </Button>\\n    <Spacer />\\n    <Button shape=\\\"circle\\\" loading type=\\\"primary\\\">\\n      P\\n    </Button>\\n  </Container>\\n</ThemeContainer>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Spacer,\n      Container,\n      ThemeContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <ThemeContainer mdxType=\"ThemeContainer\">\n    <Container mdxType=\"Container\">\n      <Button shape=\"circle\" type=\"primary\" mdxType=\"Button\">\n        P\n      </Button>\n      <Spacer mdxType=\"Spacer\" />\n      <Button shape=\"circle\" type=\"danger\" mdxType=\"Button\">\n        D\n      </Button>\n      <Spacer mdxType=\"Spacer\" />\n      <Button shape=\"circle\" type=\"primary\" ghost mdxType=\"Button\">\n        G\n      </Button>\n      <Spacer mdxType=\"Spacer\" />\n      <Button shape=\"circle\" loading type=\"primary\" mdxType=\"Button\">\n        P\n      </Button>\n    </Container>\n  </ThemeContainer>\n    </Playground>\n    <h2 {...{\n      \"id\": \"size\"\n    }}>{`Size`}</h2>\n    <p>{`You can modify the `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` of the button.`}</p>\n    <Playground __position={5} __code={'() => {\\n  const [size, setSize] = React.useState(\\'default\\')\\n  return (\\n    <ThemeContainer>\\n      <React.Fragment>\\n        <Container>\\n          <Button onClick={() => setSize(\\'small\\')}>Small</Button>\\n          <Spacer />\\n          <Button onClick={() => setSize(\\'default\\')}>Default</Button>\\n          <Spacer />\\n          <Button onClick={() => setSize(\\'large\\')}>Large</Button>\\n        </Container>\\n        <Container>\\n          <Button size={size} type=\\\"primary\\\">\\n            Primary\\n          </Button>\\n          <Spacer />\\n          <Button size={size} shape=\\\"circle\\\" ghost>\\n            G\\n          </Button>\\n        </Container>\\n      </React.Fragment>\\n    </ThemeContainer>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Button,\n      Spacer,\n      Container,\n      ThemeContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const [size, setSize] = React.useState('default');\n        return <ThemeContainer mdxType=\"ThemeContainer\">\n        <React.Fragment>\n          <Container mdxType=\"Container\">\n            <Button onClick={() => setSize('small')} mdxType=\"Button\">Small</Button>\n            <Spacer mdxType=\"Spacer\" />\n            <Button onClick={() => setSize('default')} mdxType=\"Button\">Default</Button>\n            <Spacer mdxType=\"Spacer\" />\n            <Button onClick={() => setSize('large')} mdxType=\"Button\">Large</Button>\n          </Container>\n          <Container mdxType=\"Container\">\n            <Button size={size} type=\"primary\" mdxType=\"Button\">\n              Primary\n            </Button>\n            <Spacer mdxType=\"Spacer\" />\n            <Button size={size} shape=\"circle\" ghost mdxType=\"Button\">\n              G\n            </Button>\n          </Container>\n        </React.Fragment>\n      </ThemeContainer>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Button} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}