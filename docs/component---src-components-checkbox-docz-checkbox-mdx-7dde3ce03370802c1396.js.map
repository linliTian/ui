{"version":3,"sources":["webpack:///../src/components/checkbox/docz/Checkbox.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","Checkbox","Spacer","Container","ThemeContainer","name","disabled","React","selected","setSelected","handleChange","checked","currentState","filter","n","onChange","map","key","of","isMDXComponent"],"mappings":"uSAWaA,G,UAAe,S,2NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,iBAAQ,CACN,GAAM,YADR,YAGA,gEACA,iBAAQ,CACN,GAAM,UADR,UAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,4SAAuTC,SAAO,GAC/VJ,QACAH,kBACAQ,eACAC,UACAC,aACAC,WACAC,cACAC,oBAR+V,gBAS/Vb,IAT+V,EAU/VH,eAV+V,GAW9VO,QAAQ,cACb,YAAC,IAAD,CAAgBA,QAAQ,kBACtB,YAAC,IAAD,CAAWA,QAAQ,aACjB,YAAC,IAAD,CAAUU,KAAK,QAAQV,QAAQ,YAA/B,SACA,YAAC,IAAD,CAAUU,KAAK,OAAOV,QAAQ,YAA9B,QACA,YAAC,IAAD,CAAUU,KAAK,OAAOV,QAAQ,YAA9B,QACA,YAAC,IAAD,CAAUU,KAAK,MAAMC,UAAQ,EAACX,QAAQ,YAAtC,OAGA,YAAC,IAAD,CAAUU,KAAK,aAAaV,QAAQ,gBAItC,iBAAQ,CACN,GAAM,+BADR,+BAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,k9BAA29BC,SAAO,GACngCJ,QACAH,kBACAQ,eACAC,UACAC,aACAC,WACAC,cACAC,oBARmgC,gBASngCb,IATmgC,EAUngCH,eAVmgC,GAWlgCO,QAAQ,eACR,WAAM,MAC2BY,WAAe,IAAxCC,EADF,KACYC,EADZ,KAGCC,EAAe,SAAC,GAGhB,IAFJL,EAEI,EAFJA,KACAM,EACI,EADJA,QAGEF,EADEE,EACU,SAAAC,GAAY,4BAAQA,GAAR,CAAsBP,KAElC,SAAAO,GAAY,OAAIA,EAAaC,QAAO,SAAAC,GAAC,OAAIA,IAAMT,QAI/D,OAAO,YAAC,IAAD,CAAgBV,QAAQ,kBAC/B,YAAC,WAAD,KACE,YAAC,IAAD,CAAUU,KAAK,QAAQU,SAAUL,EAAcf,QAAQ,YAAvD,SAGA,YAAC,IAAD,CAAUU,KAAK,OAAOU,SAAUL,EAAcf,QAAQ,YAAtD,QAGA,YAAC,IAAD,CAAUU,KAAK,OAAOU,SAAUL,EAAcf,QAAQ,YAAtD,QAGA,YAAC,IAAD,CAAUU,KAAK,MAAMC,UAAQ,EAACX,QAAQ,YAAtC,OAVF,iBAcE,uBACGa,EAASQ,KAAI,SAAAX,GAAI,OAAI,uBAClB,oBAAMY,IAAKZ,GAAOA,EAAlB,KAA+B,iCAO3C,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOa,GAAIjB,IAAUN,QAAQ,gB,yNAKjCH,EAAW2B,gBAAiB","file":"component---src-components-checkbox-docz-checkbox-mdx-7dde3ce03370802c1396.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/linli.tian/awn/ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Checkbox } from '../Checkbox';\nimport { Spacer, Container, ThemeContainer } from '../../../../docz/components';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h1>\n    <p>{`Used as a way to select multiple values`}</p>\n    <h2 {...{\n      \"id\": \"simple\"\n    }}>{`Simple`}</h2>\n    <Playground __position={0} __code={'<ThemeContainer>\\n  <Container>\\n    <Checkbox name=\\\"tiger\\\">Tiger</Checkbox>\\n    <Checkbox name=\\\"lion\\\">Lion</Checkbox>\\n    <Checkbox name=\\\"bear\\\">Bear</Checkbox>\\n    <Checkbox name=\\\"fox\\\" disabled>\\n      Fox\\n    </Checkbox>\\n    <Checkbox name=\\\"no-content\\\" />\\n  </Container>\\n</ThemeContainer>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Checkbox,\n      Spacer,\n      Container,\n      ThemeContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <ThemeContainer mdxType=\"ThemeContainer\">\n    <Container mdxType=\"Container\">\n      <Checkbox name=\"tiger\" mdxType=\"Checkbox\">Tiger</Checkbox>\n      <Checkbox name=\"lion\" mdxType=\"Checkbox\">Lion</Checkbox>\n      <Checkbox name=\"bear\" mdxType=\"Checkbox\">Bear</Checkbox>\n      <Checkbox name=\"fox\" disabled mdxType=\"Checkbox\">\n        Fox\n      </Checkbox>\n      <Checkbox name=\"no-content\" mdxType=\"Checkbox\" />\n    </Container>\n  </ThemeContainer>\n    </Playground>\n    <h2 {...{\n      \"id\": \"tracking-selected-checkboxs\"\n    }}>{`Tracking Selected Checkboxs`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const [selected, setSelected] = React.useState([])\\n  const handleChange = ({ name, checked }) => {\\n    if (checked) {\\n      setSelected(currentState => [...currentState, name])\\n    } else {\\n      setSelected(currentState => currentState.filter(n => n !== name))\\n    }\\n  }\\n\\n  return (\\n    <ThemeContainer>\\n      <React.Fragment>\\n        <Checkbox name=\\\"tiger\\\" onChange={handleChange}>\\n          Tiger\\n        </Checkbox>\\n        <Checkbox name=\\\"lion\\\" onChange={handleChange}>\\n          Lion\\n        </Checkbox>\\n        <Checkbox name=\\\"bear\\\" onChange={handleChange}>\\n          Bear\\n        </Checkbox>\\n        <Checkbox name=\\\"fox\\\" disabled>\\n          Fox\\n        </Checkbox>\\n        Checked Items:\\n        <div>\\n          {selected.map(name => (\\n            <div>\\n              <span key={name}>{name} </span>\\n              <br />\\n            </div>\\n          ))}\\n        </div>\\n      </React.Fragment>\\n    </ThemeContainer>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Checkbox,\n      Spacer,\n      Container,\n      ThemeContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const [selected, setSelected] = React.useState([]);\n\n        const handleChange = ({\n          name,\n          checked\n        }) => {\n          if (checked) {\n            setSelected(currentState => [...currentState, name]);\n          } else {\n            setSelected(currentState => currentState.filter(n => n !== name));\n          }\n        };\n\n        return <ThemeContainer mdxType=\"ThemeContainer\">\n        <React.Fragment>\n          <Checkbox name=\"tiger\" onChange={handleChange} mdxType=\"Checkbox\">\n            Tiger\n          </Checkbox>\n          <Checkbox name=\"lion\" onChange={handleChange} mdxType=\"Checkbox\">\n            Lion\n          </Checkbox>\n          <Checkbox name=\"bear\" onChange={handleChange} mdxType=\"Checkbox\">\n            Bear\n          </Checkbox>\n          <Checkbox name=\"fox\" disabled mdxType=\"Checkbox\">\n            Fox\n          </Checkbox>\n          Checked Items:\n          <div>\n            {selected.map(name => <div>\n                <span key={name}>{name} </span><br />\n              </div>)}\n          </div>\n        </React.Fragment>\n      </ThemeContainer>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Checkbox} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}