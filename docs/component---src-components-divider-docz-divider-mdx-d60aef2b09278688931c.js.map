{"version":3,"sources":["webpack:///../src/components/divider/docz/Divider.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","Divider","Button","Modal","Parent","Container","Ulist","UlistHorizontal","Rect","Spacer","ContainerModal","ModalContent","ContainerText","ThemeContainer","component","margin","thickness","orientation","React","visible","setVisibility","onCancel","onOk","onClick","title","parentName","text","textAlign","bgColor","fontSize","of","isMDXComponent"],"mappings":"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","file":"component---src-components-divider-docz-divider-mdx-d60aef2b09278688931c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/linli.tian/awn/ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Divider } from '../Divider';\nimport { Button } from '../../button/Button';\nimport { Modal } from '../../modal/Modal';\nimport { Parent, Container, Ulist, UlistHorizontal, Rect, Spacer, ContainerModal, ModalContent, ContainerText } from './Divider.docz';\nimport { ThemeContainer } from '../../../../docz/components';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"divider\"\n    }}>{`Divider`}</h1>\n    <p>{`A divider is a line used to group content on lists and layouts.`}</p>\n    <h2 {...{\n      \"id\": \"horizontal-line\"\n    }}>{`Horizontal line`}</h2>\n    <p>{`Set the wrapper Container to display:flex`}</p>\n    <Playground __position={0} __code={'<ThemeContainer>\\n  <Parent>\\n    <Container>\\n      <Ulist>\\n        <li>item 1 item 1</li>\\n        <li>item 2</li>\\n        <Divider component=\\\"li\\\" margin=\\\"20px\\\" thickness=\\\"1px\\\" />\\n        <li>item 3</li>\\n        <li>item 4</li>\\n        <li>item 5</li>\\n      </Ulist>\\n    </Container>\\n  </Parent>\\n</ThemeContainer>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Divider,\n      Button,\n      Modal,\n      Parent,\n      Container,\n      Ulist,\n      UlistHorizontal,\n      Rect,\n      Spacer,\n      ContainerModal,\n      ModalContent,\n      ContainerText,\n      ThemeContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <ThemeContainer mdxType=\"ThemeContainer\">\n    <Parent mdxType=\"Parent\">\n      <Container mdxType=\"Container\">\n        <Ulist mdxType=\"Ulist\">\n          <li>item 1 item 1</li>\n          <li>item 2</li>\n          <Divider component=\"li\" margin=\"20px\" thickness=\"1px\" mdxType=\"Divider\" />\n          <li>item 3</li>\n          <li>item 4</li>\n          <li>item 5</li>\n        </Ulist>\n      </Container>\n    </Parent>\n  </ThemeContainer>\n    </Playground>\n    <h2 {...{\n      \"id\": \"vertical-line\"\n    }}>{`Vertical line`}</h2>\n    <p>{`Set the wrapper Container to display:flex`}</p>\n    <Playground __position={1} __code={'<ThemeContainer>\\n  <Parent>\\n    <Container>\\n      <Rect>A</Rect>\\n      <Rect>B</Rect>\\n      <Rect>C</Rect>\\n      <Divider orientation=\\\"vertical\\\" margin=\\\"20px\\\" thickness=\\\"1px\\\" />\\n      <Rect>D</Rect>\\n    </Container>\\n    <Spacer />\\n    <Container>\\n      <UlistHorizontal>\\n        <li>item 1</li>\\n        <li>Item 2</li>\\n        <Divider\\n          component=\\\"li\\\"\\n          orientation=\\\"vertical\\\"\\n          margin=\\\"20px\\\"\\n          thickness=\\\"1px\\\"\\n        />\\n        <li>Item 3</li>\\n      </UlistHorizontal>\\n    </Container>\\n  </Parent>\\n</ThemeContainer>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Divider,\n      Button,\n      Modal,\n      Parent,\n      Container,\n      Ulist,\n      UlistHorizontal,\n      Rect,\n      Spacer,\n      ContainerModal,\n      ModalContent,\n      ContainerText,\n      ThemeContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <ThemeContainer mdxType=\"ThemeContainer\">\n    <Parent mdxType=\"Parent\">\n      <Container mdxType=\"Container\">\n        <Rect mdxType=\"Rect\">A</Rect>\n        <Rect mdxType=\"Rect\">B</Rect>\n        <Rect mdxType=\"Rect\">C</Rect>\n        <Divider orientation=\"vertical\" margin=\"20px\" thickness=\"1px\" mdxType=\"Divider\" />\n        <Rect mdxType=\"Rect\">D</Rect>\n      </Container>\n      <Spacer mdxType=\"Spacer\" />\n      <Container mdxType=\"Container\">\n        <UlistHorizontal mdxType=\"UlistHorizontal\">\n          <li>item 1</li>\n          <li>Item 2</li>\n          <Divider component=\"li\" orientation=\"vertical\" margin=\"20px\" thickness=\"1px\" mdxType=\"Divider\" />\n          <li>Item 3</li>\n        </UlistHorizontal>\n      </Container>\n    </Parent>\n  </ThemeContainer>\n    </Playground>\n    <h2 {...{\n      \"id\": \"inside-a-modal\"\n    }}>{`Inside a modal`}</h2>\n    <Playground __position={2} __code={'() => {\\n  const [visible, setVisibility] = React.useState(false)\\n  const onCancel = React.useCallback(() => {\\n    setVisibility(false)\\n  }, [])\\n  const onOk = React.useCallback(() => {\\n    setVisibility(false)\\n  }, [])\\n  return (\\n    <ThemeContainer>\\n      <Parent>\\n        <ContainerModal>\\n          <Button onClick={() => setVisibility(true)}>Open Modal</Button>\\n          <Modal\\n            title={\\'Title\\'}\\n            onCancel={onCancel}\\n            onOk={onOk}\\n            visible={visible}\\n          >\\n            <ModalContent>\\n              <div>Some content here</div>\\n              <Divider margin=\\\"20px\\\" thickness=\\\"1px\\\" />\\n              <div>More content here</div>\\n              <Divider margin=\\\"20px\\\" thickness=\\\"1px\\\" />\\n              <div>More content here</div>\\n            </ModalContent>\\n          </Modal>\\n        </ContainerModal>\\n      </Parent>\\n    </ThemeContainer>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Divider,\n      Button,\n      Modal,\n      Parent,\n      Container,\n      Ulist,\n      UlistHorizontal,\n      Rect,\n      Spacer,\n      ContainerModal,\n      ModalContent,\n      ContainerText,\n      ThemeContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const [visible, setVisibility] = React.useState(false);\n        const onCancel = React.useCallback(() => {\n          setVisibility(false);\n        }, []);\n        const onOk = React.useCallback(() => {\n          setVisibility(false);\n        }, []);\n        return <ThemeContainer mdxType=\"ThemeContainer\">\n        <Parent mdxType=\"Parent\">\n          <ContainerModal mdxType=\"ContainerModal\">\n            <Button onClick={() => setVisibility(true)} mdxType=\"Button\">Open Modal</Button>\n            <Modal title={'Title'} onCancel={onCancel} onOk={onOk} visible={visible} mdxType=\"Modal\">\n              <ModalContent mdxType=\"ModalContent\">\n                <div>Some content here</div>\n                <Divider margin=\"20px\" thickness=\"1px\" mdxType=\"Divider\" />\n                <div>More content here</div>\n                <Divider margin=\"20px\" thickness=\"1px\" mdxType=\"Divider\" />\n                <div>More content here</div>\n              </ModalContent>\n            </Modal>\n          </ContainerModal>\n        </Parent>\n      </ThemeContainer>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"with-text\"\n    }}>{`With text`}</h2>\n    <p>{`Set the wrapper Container to display:flex.`}</p>\n    <p><strong parentName=\"p\">{` bgColor `}</strong>{` is used only when `}<strong parentName=\"p\">{` text `}</strong>{` is also used in order to match the background color of the parent`}</p>\n    <Playground __position={3} __code={'<ThemeContainer>\\n  <Parent>\\n    <ContainerText>\\n      <Divider\\n        text=\\\"Some text\\\"\\n        textAlign=\\\"left\\\"\\n        bgColor=\\\"#f1f1f1\\\"\\n        thickness=\\\"1px\\\"\\n        fontSize={1}\\n      />\\n    </ContainerText>\\n    <Spacer />\\n    <ContainerText>\\n      <Divider\\n        text=\\\"Some text\\\"\\n        bgColor=\\\"#f1f1f1\\\"\\n        thickness=\\\"1px\\\"\\n        fontSize={1}\\n      />\\n    </ContainerText>\\n    <Spacer />\\n    <ContainerText>\\n      <Divider\\n        text=\\\"Some text\\\"\\n        textAlign=\\\"right\\\"\\n        thickness=\\\"1px\\\"\\n        bgColor=\\\"#f1f1f1\\\"\\n        fontSize={1}\\n      />\\n    </ContainerText>\\n  </Parent>\\n</ThemeContainer>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Divider,\n      Button,\n      Modal,\n      Parent,\n      Container,\n      Ulist,\n      UlistHorizontal,\n      Rect,\n      Spacer,\n      ContainerModal,\n      ModalContent,\n      ContainerText,\n      ThemeContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <ThemeContainer mdxType=\"ThemeContainer\">\n    <Parent mdxType=\"Parent\">\n      <ContainerText mdxType=\"ContainerText\">\n        <Divider text=\"Some text\" textAlign=\"left\" bgColor=\"#f1f1f1\" thickness=\"1px\" fontSize={1} mdxType=\"Divider\" />\n      </ContainerText>\n      <Spacer mdxType=\"Spacer\" />\n      <ContainerText mdxType=\"ContainerText\">\n        <Divider text=\"Some text\" bgColor=\"#f1f1f1\" thickness=\"1px\" fontSize={1} mdxType=\"Divider\" />\n      </ContainerText>\n      <Spacer mdxType=\"Spacer\" />\n      <ContainerText mdxType=\"ContainerText\">\n        <Divider text=\"Some text\" textAlign=\"right\" thickness=\"1px\" bgColor=\"#f1f1f1\" fontSize={1} mdxType=\"Divider\" />\n      </ContainerText>\n    </Parent>\n  </ThemeContainer>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={Divider} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}