(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{nwzH:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return r})),t.d(n,"default",(function(){return p}));var o=t("Fcif"),a=t("+I+c"),i=(t("mXGw"),t("/FXl")),l=t("TjRS"),r=(t("aD51"),{});void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/hooks/hooks.mdx"}});var c={_frontmatter:r},s=l.a;function p(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)(s,Object(o.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"useuploadonmounteffect"},"useUploadOnMountEffect"),Object(i.b)("p",null,"Provides any component the ability to upload a file when it mounts"),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"This hook is useful for situations where you want to create a component that displays the contents of a file like ",Object(i.b)("inlineCode",{parentName:"p"},"name"),", ",Object(i.b)("inlineCode",{parentName:"p"},"fileSize"),", etc. But want to upload that file when the component mounts. Use this hook to enrich your component and do all of the heavy lifting for you!")),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),'  import { useUploadOnMountEffect } from "@rtkwlf/ui";\n\n  const MyFileComponent = ({ file }) => {\n\n    const onFileUploaded = React.useCallback((itemKey, response) => {\n      console.log(itemKey, response);\n    }, []);\n\n    const {\n      percentUploaded,\n      error\n    } = useUploadOnMountEffect({\n      file,\n      uploadUrl: "/my-upload-endpoint"\n      itemKey: "1",\n      onFileUploaded,\n      headers: [\n        {\n          header: "Authorization",\n          value: "Bearer <my-token>"\n        }\n      ]\n    });\n\n    return (\n      <div>\n        <p>{file.name}<p>\n      <div>\n    );\n  };\n')))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/hooks/hooks.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-hooks-hooks-mdx-11b014b6f3b61e047047.js.map