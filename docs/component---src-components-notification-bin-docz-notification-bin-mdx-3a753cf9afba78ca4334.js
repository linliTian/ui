(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{"OM/a":function(n,t,e){"use strict";e.r(t),e.d(t,"_frontmatter",(function(){return m})),e.d(t,"default",(function(){return y}));var i=e("Fcif"),o=e("6CzD"),a=e("+I+c"),c=e("mXGw"),r=e("/FXl"),f=e("TjRS"),s=e("ZFoC"),u=e("WGwf"),d=e("odlw"),l=e("yj+E"),m=(e("aD51"),{});void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/notificationBin/docz/NotificationBin.mdx"}});var b={_frontmatter:m},p=f.a;function y(n){var t,e=n.components,y=Object(a.a)(n,["components"]);return Object(r.b)(p,Object(i.a)({},b,y,{components:e,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"notificationbin"},"NotificationBin"),Object(r.b)("p",null,"Manages all notifications including enter and exit notifications"),Object(r.b)("h2",{id:"simple"},"Simple"),Object(r.b)(s.c,{__position:0,__code:"() => {\n  const [notifications, setNotifications] = React.useState([])\n  const [notificationComponent, setNotificationComponent] = React.useState(\n    'default',\n  )\n  const add = React.useCallback(() => {\n    setNotifications(currentNotifications => {\n      const randomNumber = Math.floor(Math.random() * 999)\n      const newNotifcation = {\n        itemKey: randomNumber,\n        title: `Notification: ${randomNumber}`,\n        children: <div>This is the description.</div>,\n        notificationType: 'success',\n      }\n      return [...currentNotifications, newNotifcation]\n    })\n  }, [])\n  const remove = React.useCallback(key => {\n    setNotifications(currentNotifications => {\n      return currentNotifications.filter(n => n.itemKey !== key)\n    })\n  }, [])\n  const toggleComponent = React.useCallback(() => {\n    setNotificationComponent(current => {\n      if (current === 'default') {\n        return 'box'\n      }\n      return 'default'\n    })\n  }, [])\n  return (\n    <ThemeContainer>\n      <div>\n        <div style={{ display: 'flex' }}>\n          <Button onClick={add}>Add</Button>\n          <Spacer />\n          <Button onClick={toggleComponent}>\n            Toggle Notification Component\n          </Button>\n        </div>\n        <Spacer />\n        <NotificationBin\n          notificationComponent={notificationComponent}\n          notifications={notifications}\n          onRemove={remove}\n        />\n      </div>\n    </ThemeContainer>\n  )\n}",__scope:(t={props:y,DefaultLayout:f.a,Playground:s.c,Props:s.d,NotificationBin:u.a,Button:d.a,ThemeContainer:l.f,Spacer:l.d},t.DefaultLayout=f.a,t._frontmatter=m,t),mdxType:"Playground"},(function(){var n=c.useState([]),t=n[0],e=n[1],i=c.useState("default"),a=i[0],f=i[1],s=c.useCallback((function(){e((function(n){var t=Math.floor(999*Math.random()),e={itemKey:t,title:"Notification: "+t,children:Object(r.b)("div",null,"This is the description."),notificationType:"success"};return[].concat(Object(o.a)(n),[e])}))}),[]),m=c.useCallback((function(n){e((function(t){return t.filter((function(t){return t.itemKey!==n}))}))}),[]),b=c.useCallback((function(){f((function(n){return"default"===n?"box":"default"}))}),[]);return Object(r.b)(l.f,{mdxType:"ThemeContainer"},Object(r.b)("div",null,Object(r.b)("div",{style:{display:"flex"}},Object(r.b)(d.a,{onClick:s,mdxType:"Button"},"Add"),Object(r.b)(l.d,{mdxType:"Spacer"}),Object(r.b)(d.a,{onClick:b,mdxType:"Button"},"Toggle Notification Component")),Object(r.b)(l.d,{mdxType:"Spacer"}),Object(r.b)(u.a,{notificationComponent:a,notifications:t,onRemove:m,mdxType:"NotificationBin"})))})),Object(r.b)("h2",{id:"notificationbin-props"},"NotificationBin Props"),Object(r.b)(s.d,{of:u.a,mdxType:"Props"}))}void 0!==y&&y&&y===Object(y)&&Object.isExtensible(y)&&!y.hasOwnProperty("__filemeta")&&Object.defineProperty(y,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/notificationBin/docz/NotificationBin.mdx"}}),y.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-notification-bin-docz-notification-bin-mdx-3a753cf9afba78ca4334.js.map