(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{jIWE:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return m})),t.d(n,"default",(function(){return h}));var a=t("Fcif"),c=t("+I+c"),s=t("mXGw"),o=t("/FXl"),l=t("TjRS"),r=t("ZFoC"),i=t("mJ+v"),b=t("06FW"),u=t("yj+E"),m=(t("aD51"),{});void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/formItem/docz/FormItem.mdx"}});var p={_frontmatter:m},d=l.a;function h(e){var n,t=e.components,h=Object(c.a)(e,["components"]);return Object(o.b)(d,Object(a.a)({},p,h,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"formitem"},"FormItem"),Object(o.b)("p",null,"Wrap around form items to add additional functionality"),Object(o.b)("h2",{id:"simple"},"Simple"),Object(o.b)(r.c,{__position:0,__code:"() => {\n  const [status, setStatus] = React.useState()\n  const handleCheck = React.useCallback(\n    type => {\n      if (type === status) {\n        setStatus(undefined)\n      } else {\n        setStatus(type)\n      }\n    },\n    [status],\n  )\n  return (\n    <ThemeContainer>\n      <div>\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            marginBotton: '8px',\n          }}\n        >\n          <label>\n            <input\n              checked={status === 'error'}\n              type=\"checkbox\"\n              onClick={() => handleCheck('error')}\n            />\n            error\n          </label>\n          <label>\n            <input\n              checked={status === 'warning'}\n              type=\"checkbox\"\n              onClick={() => handleCheck('warning')}\n            />\n            warning\n          </label>\n          <label>\n            <input\n              checked={status === 'loading'}\n              type=\"checkbox\"\n              onClick={() => handleCheck('loading')}\n            />\n            loading\n          </label>\n          <label>\n            <input\n              checked={status === 'success'}\n              type=\"checkbox\"\n              onClick={() => handleCheck('success')}\n            />\n            success\n          </label>\n        </div>\n        <FormItem\n          label=\"Label\"\n          status={status}\n          message={`This is a ${status} message`}\n        >\n          <Input />\n        </FormItem>\n        <FormItem\n          label=\"Label\"\n          status={status}\n          message={`This is a ${status} message`}\n        >\n          <Input htmlType=\"textarea\" />\n        </FormItem>\n      </div>\n    </ThemeContainer>\n  )\n}",__scope:(n={props:h,DefaultLayout:l.a,Playground:r.c,Props:r.d,FormItem:i.a,Input:b.a,ThemeContainer:u.f},n.DefaultLayout=l.a,n._frontmatter=m,n),mdxType:"Playground"},(function(){var e=s.useState(),n=e[0],t=e[1],a=s.useCallback((function(e){t(e===n?void 0:e)}),[n]);return Object(o.b)(u.f,{mdxType:"ThemeContainer"},Object(o.b)("div",null,Object(o.b)("div",{style:{display:"flex",alignItems:"center",marginBotton:"8px"}},Object(o.b)("label",null,Object(o.b)("input",{checked:"error"===n,type:"checkbox",onClick:function(){return a("error")}}),"error"),Object(o.b)("label",null,Object(o.b)("input",{checked:"warning"===n,type:"checkbox",onClick:function(){return a("warning")}}),"warning"),Object(o.b)("label",null,Object(o.b)("input",{checked:"loading"===n,type:"checkbox",onClick:function(){return a("loading")}}),"loading"),Object(o.b)("label",null,Object(o.b)("input",{checked:"success"===n,type:"checkbox",onClick:function(){return a("success")}}),"success")),Object(o.b)(i.a,{label:"Label",status:n,message:"This is a "+n+" message",mdxType:"FormItem"},Object(o.b)(b.a,{mdxType:"Input"})),Object(o.b)(i.a,{label:"Label",status:n,message:"This is a "+n+" message",mdxType:"FormItem"},Object(o.b)(b.a,{htmlType:"textarea",mdxType:"Input"}))))})),Object(o.b)("h2",{id:"formitem-props"},"FormItem Props"),Object(o.b)(r.d,{of:i.a,mdxType:"Props"}))}void 0!==h&&h&&h===Object(h)&&Object.isExtensible(h)&&!h.hasOwnProperty("__filemeta")&&Object.defineProperty(h,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/formItem/docz/FormItem.mdx"}}),h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-form-item-docz-form-item-mdx-976d161eee77092d5349.js.map