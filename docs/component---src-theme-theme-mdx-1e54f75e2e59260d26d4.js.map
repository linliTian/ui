{"version":3,"sources":["webpack:///../src/theme/theme.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,S,qMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,WADR,WAGA,iBAAQ,CACN,GAAM,iEADR,iEAGA,iBAAQ,CACN,GAAM,oBADR,oBAGA,8EAA6D,0BAAYC,WAAW,KAAvB,eAA7D,kLAGA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,gHAIL,iBAAQ,CACN,GAAM,iBADR,iBAGA,uGAAsF,0BAAYA,WAAW,KAAvB,iBAAtF,KACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,mR,mMAmBTJ,EAAWK,gBAAiB","file":"component---src-theme-theme-mdx-1e54f75e2e59260d26d4.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/linli.tian/awn/ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"theming\"\n    }}>{`Theming`}</h1>\n    <h3 {...{\n      \"id\": \"provide-a-theme-to-change-the-look-and-feel-of-each-component\"\n    }}>{`Provide a theme to change the look and feel of each component`}</h3>\n    <h2 {...{\n      \"id\": \"creating-a-theme\"\n    }}>{`Creating a Theme`}</h2>\n    <p>{`If you wish to create your own theme use the provided `}<inlineCode parentName=\"p\">{`createTheme`}</inlineCode>{` function. Each component provides its own theme\nthat can be overridden. Please see the respective component documentation for a full list of the available theme\noverrides.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import { createTheme } from '@rtkwlf/ui';\n\nconst myTheme = createTheme(colorOverrides, themeOverrides);\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"using-a-theme\"\n    }}>{`Using a Theme`}</h2>\n    <p>{`Once you have created a new theme you can provide it to the components via the `}<inlineCode parentName=\"p\">{`ThemeProvider`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import {\n  createTheme,\n  ThemeProvider as UIThemeProvider\n} from '@rtkwlf/ui';\n\nconst myTheme = createTheme({\n  primary: 'red'\n}, {});\n\nconst App = () => (\n  <UIThemeProvider theme={myTheme}>\n    <Button>My Red Button</Button>\n  </UIThemeProvider\n)\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}