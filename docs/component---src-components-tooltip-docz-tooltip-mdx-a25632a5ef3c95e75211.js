(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{QrJl:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return d})),n.d(t,"default",(function(){return O}));var o=n("Fcif"),i=n("+I+c"),a=n("mXGw"),l=n("/FXl"),c=n("TjRS"),r=n("ZFoC"),p=n("Yp4V"),s=n("0f2x"),b=n("pQLI"),m=n("odlw"),u=n("yj+E"),d=(n("aD51"),{});void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!d.hasOwnProperty("__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/tooltip/docz/Tooltip.mdx"}});var y={_frontmatter:d},f=c.a;function O(e){var t,n,O=e.components,T=Object(i.a)(e,["components"]);return Object(l.b)(f,Object(o.a)({},y,T,{components:O,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"tooltip"},"Tooltip"),Object(l.b)("p",null,"Used to reveal extra guidance or information to the user."),Object(l.b)("h2",{id:"simple"},"Simple"),Object(l.b)("p",null,"Change the placement of the tooltip with respect to the anchor position by modifying the ",Object(l.b)("inlineCode",{parentName:"p"},"placement")," prop."),Object(l.b)(r.c,{__position:0,__code:"() => {\n  const [index, setPositionIndex] = React.useState(0)\n  const handleClick = React.useCallback(() => {\n    if (index === positions.length - 1) {\n      setPositionIndex(0)\n    } else {\n      setPositionIndex(index + 1)\n    }\n  }, [index])\n  const position = positions[index]\n  return (\n    <ThemeContainer>\n      <React.Fragment>\n        <Tooltip placement={position} overlay={<Overlay />}>\n          <Button onClick={handleClick} ghost>\n            Click to Change Position\n          </Button>\n        </Tooltip>\n        <Current>Current Position: {positions[index]}</Current>\n      </React.Fragment>\n    </ThemeContainer>\n  )\n}",__scope:(t={props:T,DefaultLayout:c.a,Playground:r.c,Props:r.d,Tooltip:p.a,Current:s.a,positions:s.d,Overlay:s.b,Spacer:s.c,Menu:b.a,Button:m.a,ThemeContainer:u.f},t.DefaultLayout=c.a,t._frontmatter=d,t),mdxType:"Playground"},(function(){var e=a.useState(0),t=e[0],n=e[1],o=a.useCallback((function(){t===s.d.length-1?n(0):n(t+1)}),[t]),i=s.d[t];return Object(l.b)(u.f,{mdxType:"ThemeContainer"},Object(l.b)(a.Fragment,null,Object(l.b)(p.a,{placement:i,overlay:Object(l.b)(s.b,{mdxType:"Overlay"}),mdxType:"Tooltip"},Object(l.b)(m.a,{onClick:o,ghost:!0,mdxType:"Button"},"Click to Change Position")),Object(l.b)(s.a,{mdxType:"Current"},"Current Position: ",s.d[t])))})),Object(l.b)("h2",{id:"custom-visibility"},"Custom Visibility"),Object(l.b)("p",null,"Customize how a tooltip is shown by modifying the ",Object(l.b)("inlineCode",{parentName:"p"},"visible")," prop."),Object(l.b)(r.c,{__position:1,__code:'() => {\n  const [visible, setVisible] = React.useState(false)\n  const overlay = (\n    <Menu onClick={key => console.log(key)} defaultSelectedItem="1">\n      <Menu.Item itemKey="1">Item 1</Menu.Item>\n      <Menu.Item itemKey="2">Item 2</Menu.Item>\n    </Menu>\n  )\n  return (\n    <ThemeContainer>\n      <React.Fragment>\n        <Button onClick={() => setVisible(!visible)}>\n          Click to Show Tooltip\n        </Button>\n        <Spacer />\n        <Tooltip placement={\'bottom\'} overlay={overlay} visible={visible}>\n          <Button ghost>Tooltip Here</Button>\n        </Tooltip>\n      </React.Fragment>\n    </ThemeContainer>\n  )\n}',__scope:(n={props:T,DefaultLayout:c.a,Playground:r.c,Props:r.d,Tooltip:p.a,Current:s.a,positions:s.d,Overlay:s.b,Spacer:s.c,Menu:b.a,Button:m.a,ThemeContainer:u.f},n.DefaultLayout=c.a,n._frontmatter=d,n),mdxType:"Playground"},(function(){var e=a.useState(!1),t=e[0],n=e[1],o=Object(l.b)(b.a,{onClick:function(e){return console.log(e)},defaultSelectedItem:"1",mdxType:"Menu"},Object(l.b)(b.a.Item,{itemKey:"1"},"Item 1"),Object(l.b)(b.a.Item,{itemKey:"2"},"Item 2"));return Object(l.b)(u.f,{mdxType:"ThemeContainer"},Object(l.b)(a.Fragment,null,Object(l.b)(m.a,{onClick:function(){return n(!t)},mdxType:"Button"},"Click to Show Tooltip"),Object(l.b)(s.c,{mdxType:"Spacer"}),Object(l.b)(p.a,{placement:"bottom",overlay:o,visible:t,mdxType:"Tooltip"},Object(l.b)(m.a,{ghost:!0,mdxType:"Button"},"Tooltip Here"))))})),Object(l.b)("h2",{id:"tooltip-props"},"Tooltip Props"),Object(l.b)(r.d,{of:p.a,mdxType:"Props"}))}void 0!==O&&O&&O===Object(O)&&Object.isExtensible(O)&&!O.hasOwnProperty("__filemeta")&&Object.defineProperty(O,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/tooltip/docz/Tooltip.mdx"}}),O.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-tooltip-docz-tooltip-mdx-a25632a5ef3c95e75211.js.map