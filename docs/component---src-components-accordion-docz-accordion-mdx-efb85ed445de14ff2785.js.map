{"version":3,"sources":["webpack:///../src/components/accordion/docz/Accordion.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Input","Button","Accordion","AccordionItem","StyledCollapseContent","CollapseContent","AccordionContainer","ThemeContainer","classic","defaultExpandedItems","itemGap","itemKey","footer","label","itemKeys","React","selectedItems","setSelectedItems","isFullyExpanded","length","onClick","style","height","expandedItems","onChange","key","includes","filter","i","concat","disabled","table","of","exclude","isMDXComponent"],"mappings":"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","file":"component---src-components-accordion-docz-accordion-mdx-efb85ed445de14ff2785.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/linli.tian/awn/ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Input } from '../../input/Input';\nimport { Button } from '../../button/Button';\nimport { Accordion } from '../Accordion';\nimport { AccordionItem } from '../AccordionItem';\nimport { StyledCollapseContent, CollapseContent, AccordionContainer, ThemeContainer } from '../../../../docz/components';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"accordion\"\n    }}>{`Accordion`}</h1>\n    <h3 {...{\n      \"id\": \"accordions-allow-users-to-display-content-in-an-organized-space-efficient-way\"\n    }}>{`Accordions allow users to display content in an organized, space efficient way.`}</h3>\n    <h2 {...{\n      \"id\": \"standard\"\n    }}>{`Standard`}</h2>\n    <p>{`The standard accordion will allow users to expand multiple sections. Set the `}<inlineCode parentName=\"p\">{`classic`}</inlineCode>{` prop to `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{` to achieve this behaviour.`}</p>\n    <Playground __position={0} __code={'<ThemeContainer>\\n  <AccordionContainer>\\n    <Accordion classic={false} defaultExpandedItems={[\\'1\\', \\'3\\']} itemGap={20}>\\n      <AccordionItem itemKey=\\\"1\\\" footer={<Button>Submit</Button>}>\\n        <CollapseContent>\\n          <Input label={\\'First Name\\'} />\\n          <Input label={\\'Last Name\\'} />\\n          <Input label={\\'Email\\'} />\\n          <Input label={\\'Phone Number\\'} />\\n        </CollapseContent>\\n      </AccordionItem>\\n      <AccordionItem itemKey=\\\"2\\\">\\n        <CollapseContent />\\n      </AccordionItem>\\n      <AccordionItem itemKey=\\\"3\\\">\\n        <CollapseContent />\\n      </AccordionItem>\\n    </Accordion>\\n  </AccordionContainer>\\n</ThemeContainer>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Input,\n      Button,\n      Accordion,\n      AccordionItem,\n      StyledCollapseContent,\n      CollapseContent,\n      AccordionContainer,\n      ThemeContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <ThemeContainer mdxType=\"ThemeContainer\">\n    <AccordionContainer mdxType=\"AccordionContainer\">\n      <Accordion classic={false} defaultExpandedItems={['1', '3']} itemGap={20} mdxType=\"Accordion\">\n        <AccordionItem itemKey=\"1\" footer={<Button mdxType=\"Button\">Submit</Button>} mdxType=\"AccordionItem\">\n          <CollapseContent mdxType=\"CollapseContent\">\n            <Input label={'First Name'} mdxType=\"Input\" />\n            <Input label={'Last Name'} mdxType=\"Input\" />\n            <Input label={'Email'} mdxType=\"Input\" />\n            <Input label={'Phone Number'} mdxType=\"Input\" />\n          </CollapseContent>\n        </AccordionItem>\n        <AccordionItem itemKey=\"2\" mdxType=\"AccordionItem\">\n          <CollapseContent mdxType=\"CollapseContent\" />\n        </AccordionItem>\n        <AccordionItem itemKey=\"3\" mdxType=\"AccordionItem\">\n          <CollapseContent mdxType=\"CollapseContent\" />\n        </AccordionItem>\n      </Accordion>\n    </AccordionContainer>\n  </ThemeContainer>\n    </Playground>\n    <h2 {...{\n      \"id\": \"classic\"\n    }}>{`Classic`}</h2>\n    <p>{`The standard accordion will allow users to expand a single section at a time. Set the `}<inlineCode parentName=\"p\">{`classic`}</inlineCode>{` prop to `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` to achieve this behaviour.`}</p>\n    <Playground __position={1} __code={'<ThemeContainer>\\n  <AccordionContainer>\\n    <Accordion itemGap={20} classic>\\n      <AccordionItem itemKey=\\\"1\\\">\\n        <CollapseContent />\\n      </AccordionItem>\\n      <AccordionItem itemKey=\\\"2\\\">\\n        <CollapseContent />\\n      </AccordionItem>\\n      <AccordionItem itemKey=\\\"3\\\">\\n        <CollapseContent />\\n      </AccordionItem>\\n    </Accordion>\\n  </AccordionContainer>\\n</ThemeContainer>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Input,\n      Button,\n      Accordion,\n      AccordionItem,\n      StyledCollapseContent,\n      CollapseContent,\n      AccordionContainer,\n      ThemeContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <ThemeContainer mdxType=\"ThemeContainer\">\n    <AccordionContainer mdxType=\"AccordionContainer\">\n      <Accordion itemGap={20} classic mdxType=\"Accordion\">\n        <AccordionItem itemKey=\"1\" mdxType=\"AccordionItem\">\n          <CollapseContent mdxType=\"CollapseContent\" />\n        </AccordionItem>\n        <AccordionItem itemKey=\"2\" mdxType=\"AccordionItem\">\n          <CollapseContent mdxType=\"CollapseContent\" />\n        </AccordionItem>\n        <AccordionItem itemKey=\"3\" mdxType=\"AccordionItem\">\n          <CollapseContent mdxType=\"CollapseContent\" />\n        </AccordionItem>\n      </Accordion>\n    </AccordionContainer>\n  </ThemeContainer>\n    </Playground>\n    <h2 {...{\n      \"id\": \"external-accordion-control\"\n    }}>{`External Accordion Control`}</h2>\n    <p>{`Take external control of the accordion by passing `}<inlineCode parentName=\"p\">{`expandedItems`}</inlineCode>{` that are managed outside of the `}<inlineCode parentName=\"p\">{`Accordion`}</inlineCode>{`.`}</p>\n    <Playground __position={2} __code={'() => {\\n  const itemKeys = [\\'1\\', \\'2\\', \\'3\\']\\n  const [selectedItems, setSelectedItems] = React.useState([])\\n  const handleOnChange = key => {\\n    if (selectedItems.includes(key)) {\\n      setSelectedItems(selectedItems.filter(i => i !== key))\\n    } else {\\n      setSelectedItems(selectedItems.concat(key))\\n    }\\n  }\\n\\n  const handleOnClick = () => {\\n    if (selectedItems.length === itemKeys.length) {\\n      setSelectedItems([])\\n    } else {\\n      setSelectedItems(itemKeys)\\n    }\\n  }\\n  const isFullyExpanded = selectedItems.length === itemKeys.length\\n  return (\\n    <ThemeContainer>\\n      <AccordionContainer>\\n        <Button onClick={handleOnClick}>\\n          {isFullyExpanded ? \\'Close All\\' : \\'Expand All\\'}\\n        </Button>\\n        <div style={{ height: \\'20px\\' }} />\\n        <Accordion\\n          itemGap={20}\\n          expandedItems={selectedItems}\\n          defaultExpandedItems={selectedItems}\\n          onChange={handleOnChange}\\n        >\\n          <AccordionItem itemKey={itemKeys[0]} footer={<div>A footer</div>}>\\n            <CollapseContent />\\n          </AccordionItem>\\n          <AccordionItem itemKey={itemKeys[1]} disabled>\\n            <CollapseContent />\\n          </AccordionItem>\\n          <AccordionItem itemKey={itemKeys[2]}>\\n            <CollapseContent />\\n          </AccordionItem>\\n        </Accordion>\\n      </AccordionContainer>\\n    </ThemeContainer>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Input,\n      Button,\n      Accordion,\n      AccordionItem,\n      StyledCollapseContent,\n      CollapseContent,\n      AccordionContainer,\n      ThemeContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const itemKeys = ['1', '2', '3'];\n        const [selectedItems, setSelectedItems] = React.useState([]);\n\n        const handleOnChange = key => {\n          if (selectedItems.includes(key)) {\n            setSelectedItems(selectedItems.filter(i => i !== key));\n          } else {\n            setSelectedItems(selectedItems.concat(key));\n          }\n        };\n\n        const handleOnClick = () => {\n          if (selectedItems.length === itemKeys.length) {\n            setSelectedItems([]);\n          } else {\n            setSelectedItems(itemKeys);\n          }\n        };\n\n        const isFullyExpanded = selectedItems.length === itemKeys.length;\n        return <ThemeContainer mdxType=\"ThemeContainer\">\n        <AccordionContainer mdxType=\"AccordionContainer\">\n          <Button onClick={handleOnClick} mdxType=\"Button\">\n            {isFullyExpanded ? 'Close All' : 'Expand All'}\n          </Button>\n          <div style={{\n              height: '20px'\n            }} />\n          <Accordion itemGap={20} expandedItems={selectedItems} defaultExpandedItems={selectedItems} onChange={handleOnChange} mdxType=\"Accordion\">\n            <AccordionItem itemKey={itemKeys[0]} footer={<div>A footer</div>} mdxType=\"AccordionItem\">\n              <CollapseContent mdxType=\"CollapseContent\" />\n            </AccordionItem>\n            <AccordionItem itemKey={itemKeys[1]} disabled mdxType=\"AccordionItem\">\n              <CollapseContent mdxType=\"CollapseContent\" />\n            </AccordionItem>\n            <AccordionItem itemKey={itemKeys[2]} mdxType=\"AccordionItem\">\n              <CollapseContent mdxType=\"CollapseContent\" />\n            </AccordionItem>\n          </Accordion>\n        </AccordionContainer>\n      </ThemeContainer>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"accordion-props\"\n    }}>{`Accordion Props`}</h2>\n    <Props table={true} of={Accordion} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"accordionitem-props\"\n    }}>{`AccordionItem Props`}</h2>\n    <Props table={true} of={AccordionItem} exclude={['expanded', 'onChange']} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"theme\"\n    }}>{`Theme`}</h2>\n    <p>{`To modify the accordion item theme, please see the `}<inlineCode parentName=\"p\">{`Collapse`}</inlineCode>{` component.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}