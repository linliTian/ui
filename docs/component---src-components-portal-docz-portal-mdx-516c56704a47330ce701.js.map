{"version":3,"sources":["webpack:///../src/components/portal/docz/Portal.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","motion","AnimatePresence","Portal","Button","ThemeContainer","Spacer","React","showPortal","setShowPortal","containerRef","onClick","ref","style","height","width","border","padding","container","current","div","initial","opacity","animate","exit","visibility","of","isMDXComponent"],"mappings":"oTAaaA,G,UAAe,S,uNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,iBAAQ,CACN,GAAM,UADR,UAGA,0GACA,iBAAQ,CACN,GAAM,UADR,UAGA,yEAAwD,0BAAYC,WAAW,KAAvB,OAAxD,KACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,knCAAioCC,SAAO,GACzqCL,QACAH,kBACAS,eACAC,UACAC,WACAC,oBACAC,WACAC,WACAC,mBACAC,YAVyqC,gBAWzqChB,IAXyqC,EAYzqCH,eAZyqC,GAaxqCO,QAAQ,eACR,WAAM,MAC+Ba,YAAe,GAA5CC,EADF,KACcC,EADd,KAECC,EAAeH,SAAa,MAIlC,OAAO,YAAC,WAAD,KACP,YAAC,IAAD,CAAQI,QAAS,kBAAMF,GAAeD,IAAad,QAAQ,UACvDc,EAA6B,cAAhB,eAEjB,YAAC,IAAD,CAAQd,QAAQ,WAChB,mBAAKkB,IAAKF,EAAcG,MAAO,CAC3BC,OAAQ,QACRC,MAAO,QACPC,OAAQ,YACRC,QAAS,WAJb,2BAQA,YAAC,IAAD,CAAiBvB,QAAQ,mBACtBc,GAAc,YAAC,IAAD,CAAQU,UAhBJ,kBAAMR,EAAaS,SAgBUzB,QAAQ,UACpD,YAAC,IAAO0B,IAAR,CAAYC,QAAS,CACnBC,QAAS,GACRC,QAAS,CACVD,QAAS,GACRE,KAAM,CACPF,QAAS,IAET,6CAIR,YAAC,IAAD,CAAQ5B,QAAQ,UACd,mBAAKmB,MAAO,CACRY,WAAY,WAEd,gDAMR,iBAAQ,CACN,GAAM,gBADR,gBAGA,YAAC,IAAD,CAAOC,GAAIvB,IAAQT,QAAQ,gB,qNAK/BH,EAAWoC,gBAAiB","file":"component---src-components-portal-docz-portal-mdx-516c56704a47330ce701.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/linli.tian/awn/ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Portal } from '../Portal';\nimport { Button } from '../../button/Button';\nimport { ThemeContainer, Spacer } from '../../../../docz/components';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"portal\"\n    }}>{`Portal`}</h1>\n    <p>{`Portals allow components to mount to a position outside the default DOM position.`}</p>\n    <h2 {...{\n      \"id\": \"simple\"\n    }}>{`Simple`}</h2>\n    <p>{`Add a simple floater to any anchor point using a `}<inlineCode parentName=\"p\">{`ref`}</inlineCode>{`.`}</p>\n    <Playground __position={0} __code={'() => {\\n  const [showPortal, setShowPortal] = React.useState(false)\\n  const containerRef = React.useRef(null)\\n  const getContainer = () => containerRef.current\\n  return (\\n    <React.Fragment>\\n      <Button onClick={() => setShowPortal(!showPortal)}>\\n        {!showPortal ? \\'Show Portal\\' : \\'Hide Portal\\'}\\n      </Button>\\n      <Spacer />\\n      <div\\n        ref={containerRef}\\n        style={{\\n          height: \\'300px\\',\\n          width: \\'500px\\',\\n          border: \\'1px solid\\',\\n          padding: \\'0 20px\\',\\n        }}\\n      >\\n        Portal will render here\\n      </div>\\n      <AnimatePresence>\\n        {showPortal && (\\n          <Portal container={getContainer}>\\n            <motion.div\\n              initial={{ opacity: 0 }}\\n              animate={{ opacity: 1 }}\\n              exit={{ opacity: 0 }}\\n            >\\n              <div>I am the portal</div>\\n            </motion.div>\\n          </Portal>\\n        )}\\n      </AnimatePresence>\\n      <Portal>\\n        <div style={{ visibility: \\'hidden\\' }}>\\n          <div>I am the portal</div>\\n        </div>\\n      </Portal>\\n    </React.Fragment>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      motion,\n      AnimatePresence,\n      Portal,\n      Button,\n      ThemeContainer,\n      Spacer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const [showPortal, setShowPortal] = React.useState(false);\n        const containerRef = React.useRef(null);\n\n        const getContainer = () => containerRef.current;\n\n        return <React.Fragment>\n        <Button onClick={() => setShowPortal(!showPortal)} mdxType=\"Button\">\n          {!showPortal ? 'Show Portal' : 'Hide Portal'}\n        </Button>\n        <Spacer mdxType=\"Spacer\" />\n        <div ref={containerRef} style={{\n            height: '300px',\n            width: \"500px\",\n            border: \"1px solid\",\n            padding: \"0 20px\"\n          }}>\n          Portal will render here\n        </div>\n        <AnimatePresence mdxType=\"AnimatePresence\">\n          {showPortal && <Portal container={getContainer} mdxType=\"Portal\">\n              <motion.div initial={{\n                opacity: 0\n              }} animate={{\n                opacity: 1\n              }} exit={{\n                opacity: 0\n              }}>\n                <div>I am the portal</div>\n              </motion.div>\n            </Portal>}\n        </AnimatePresence>\n        <Portal mdxType=\"Portal\">\n          <div style={{\n              visibility: 'hidden'\n            }}>\n            <div>I am the portal</div>\n          </div>\n        </Portal>\n      </React.Fragment>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"portal-props\"\n    }}>{`Portal Props`}</h2>\n    <Props of={Portal} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}