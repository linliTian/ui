{"version":3,"sources":["webpack:///../src/components/formItem/docz/FormItem.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Playground","Props","FormItem","Input","ThemeContainer","React","status","setStatus","handleCheck","type","undefined","style","display","alignItems","marginBotton","checked","onClick","label","message","htmlType","of","isMDXComponent"],"mappings":"wSAYaA,G,UAAe,S,2NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,iBAAQ,CACN,GAAM,YADR,YAGA,+EACA,iBAAQ,CACN,GAAM,UADR,UAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,6wDAAoyDC,SAAO,GAC50DJ,QACAH,kBACAQ,eACAC,UACAC,aACAC,UACAC,oBAP40D,gBAQ50DZ,IAR40D,EAS50DH,eAT40D,GAU30DO,QAAQ,eACR,WAAM,MACuBS,aAArBC,EADF,KACUC,EADV,KAECC,EAAcH,eAAkB,SAAAI,GAElCF,EADEE,IAASH,OACDI,EAEAD,KAEX,CAACH,IACJ,OAAO,YAAC,IAAD,CAAgBV,QAAQ,kBAC/B,uBACE,mBAAKe,MAAO,CACRC,QAAS,OACTC,WAAY,SACZC,aAAc,QAEhB,yBACE,qBAAOC,QAAoB,UAAXT,EAAoBG,KAAK,WAAWO,QAAS,kBAAMR,EAAY,YADjF,SAIA,yBACE,qBAAOO,QAAoB,YAAXT,EAAsBG,KAAK,WAAWO,QAAS,kBAAMR,EAAY,cADnF,WAIA,yBACE,qBAAOO,QAAoB,YAAXT,EAAsBG,KAAK,WAAWO,QAAS,kBAAMR,EAAY,cADnF,WAIA,yBACE,qBAAOO,QAAoB,YAAXT,EAAsBG,KAAK,WAAWO,QAAS,kBAAMR,EAAY,cADnF,YAKF,YAAC,IAAD,CAAUS,MAAM,QAAQX,OAAQA,EAAQY,QAAO,aAAeZ,EAAf,WAAiCV,QAAQ,YACtF,YAAC,IAAD,CAAOA,QAAQ,WAEjB,YAAC,IAAD,CAAUqB,MAAM,QAAQX,OAAQA,EAAQY,QAAO,aAAeZ,EAAf,WAAiCV,QAAQ,YACtF,YAAC,IAAD,CAAOuB,SAAS,WAAWvB,QAAQ,gBAM3C,iBAAQ,CACN,GAAM,kBADR,kBAGA,YAAC,IAAD,CAAOwB,GAAIlB,IAAUN,QAAQ,gB,yNAKjCH,EAAW4B,gBAAiB","file":"component---src-components-form-item-docz-form-item-mdx-976d161eee77092d5349.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/linli.tian/awn/ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { FormItem } from '../FormItem';\nimport { Input } from '../../input/Input';\nimport { ThemeContainer } from '../../../../docz/components';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"formitem\"\n    }}>{`FormItem`}</h1>\n    <p>{`Wrap around form items to add additional functionality`}</p>\n    <h2 {...{\n      \"id\": \"simple\"\n    }}>{`Simple`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [status, setStatus] = React.useState()\\n  const handleCheck = React.useCallback(\\n    type => {\\n      if (type === status) {\\n        setStatus(undefined)\\n      } else {\\n        setStatus(type)\\n      }\\n    },\\n    [status],\\n  )\\n  return (\\n    <ThemeContainer>\\n      <div>\\n        <div\\n          style={{\\n            display: \\'flex\\',\\n            alignItems: \\'center\\',\\n            marginBotton: \\'8px\\',\\n          }}\\n        >\\n          <label>\\n            <input\\n              checked={status === \\'error\\'}\\n              type=\\\"checkbox\\\"\\n              onClick={() => handleCheck(\\'error\\')}\\n            />\\n            error\\n          </label>\\n          <label>\\n            <input\\n              checked={status === \\'warning\\'}\\n              type=\\\"checkbox\\\"\\n              onClick={() => handleCheck(\\'warning\\')}\\n            />\\n            warning\\n          </label>\\n          <label>\\n            <input\\n              checked={status === \\'loading\\'}\\n              type=\\\"checkbox\\\"\\n              onClick={() => handleCheck(\\'loading\\')}\\n            />\\n            loading\\n          </label>\\n          <label>\\n            <input\\n              checked={status === \\'success\\'}\\n              type=\\\"checkbox\\\"\\n              onClick={() => handleCheck(\\'success\\')}\\n            />\\n            success\\n          </label>\\n        </div>\\n        <FormItem\\n          label=\\\"Label\\\"\\n          status={status}\\n          message={`This is a ${status} message`}\\n        >\\n          <Input />\\n        </FormItem>\\n        <FormItem\\n          label=\\\"Label\\\"\\n          status={status}\\n          message={`This is a ${status} message`}\\n        >\\n          <Input htmlType=\\\"textarea\\\" />\\n        </FormItem>\\n      </div>\\n    </ThemeContainer>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      FormItem,\n      Input,\n      ThemeContainer,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const [status, setStatus] = React.useState();\n        const handleCheck = React.useCallback(type => {\n          if (type === status) {\n            setStatus(undefined);\n          } else {\n            setStatus(type);\n          }\n        }, [status]);\n        return <ThemeContainer mdxType=\"ThemeContainer\">\n        <div>\n          <div style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              marginBotton: \"8px\"\n            }}>\n            <label>\n              <input checked={status === 'error'} type=\"checkbox\" onClick={() => handleCheck('error')} />\n              error\n            </label>\n            <label>\n              <input checked={status === 'warning'} type=\"checkbox\" onClick={() => handleCheck('warning')} />\n              warning\n            </label>\n            <label>\n              <input checked={status === 'loading'} type=\"checkbox\" onClick={() => handleCheck('loading')} />\n              loading\n            </label>\n            <label>\n              <input checked={status === 'success'} type=\"checkbox\" onClick={() => handleCheck('success')} />\n              success\n            </label>\n          </div>\n          <FormItem label=\"Label\" status={status} message={`This is a ${status} message`} mdxType=\"FormItem\">\n            <Input mdxType=\"Input\" />\n          </FormItem>\n          <FormItem label=\"Label\" status={status} message={`This is a ${status} message`} mdxType=\"FormItem\">\n            <Input htmlType=\"textarea\" mdxType=\"Input\" />\n          </FormItem>\n          </div>\n      </ThemeContainer>;\n      }}\n  </Playground>\n    <h2 {...{\n      \"id\": \"formitem-props\"\n    }}>{`FormItem Props`}</h2>\n    <Props of={FormItem} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}